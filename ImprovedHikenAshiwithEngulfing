// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© yashrt29

//@version=5
strategy('t1', overlay=true)

var isLong = false

// Calculate Heikin Ashi Values
haopen = 0.0
haclose = (open + high + low + close) / 4
haopen := na(haopen[1]) ? (open + close) / 2 : (haopen[1] + haclose[1]) / 2
hahigh = math.max(high, math.max(haopen, haclose))
halow = math.min(low, math.min(haopen, haclose))

// HA colors
hacolor = haclose > haopen ? color.green : color.red

//Bullish or Beariish Engulfing
C_DownTrend = true
C_UpTrend = true
var trendRule1 = "SMA50"
var trendRule2 = "SMA50, SMA200"
var trendRule = input.string(trendRule2, "Detect Trend Based On", options=[trendRule1, trendRule2, "No detection"])

if trendRule == trendRule1
    priceAvg = ta.sma(close, 50)
    C_DownTrend := close < priceAvg
    C_UpTrend := close > priceAvg

if trendRule == trendRule2
    sma200 = ta.sma(close, 200)
    sma50 = ta.sma(close, 50)
    C_DownTrend := close < sma50 and sma50 < sma200
    C_UpTrend := close > sma50 and sma50 > sma200

C_Len = 14 // ta.ema depth for bodyAvg
C_ShadowPercent = 5.0 // size of shadows
C_ShadowEqualsPercent = 100.0
C_DojiBodyPercent = 5.0
C_Factor = 2.0 // shows the number of times the shadow dominates the candlestick body

C_BodyHi = math.max(close, open)
C_BodyLo = math.min(close, open)
C_Body = C_BodyHi - C_BodyLo
C_BodyAvg = ta.ema(C_Body, C_Len)
C_SmallBody = C_Body < C_BodyAvg
C_LongBody = C_Body > C_BodyAvg
C_UpShadow = high - C_BodyHi
C_DnShadow = C_BodyLo - low
C_HasUpShadow = C_UpShadow > C_ShadowPercent / 100 * C_Body
C_HasDnShadow = C_DnShadow > C_ShadowPercent / 100 * C_Body
C_WhiteBody = open < close
C_BlackBody = open > close
C_Range = high - low
C_IsInsideBar = C_BodyHi[1] > C_BodyHi and C_BodyLo[1] < C_BodyLo
C_BodyMiddle = C_Body / 2 + C_BodyLo
C_ShadowEquals = C_UpShadow == C_DnShadow or (math.abs(C_UpShadow - C_DnShadow) / C_DnShadow * 100) < C_ShadowEqualsPercent and (math.abs(C_DnShadow - C_UpShadow) / C_UpShadow * 100) < C_ShadowEqualsPercent
C_IsDojiBody = C_Range > 0 and C_Body <= C_Range * C_DojiBodyPercent / 100
C_Doji = C_IsDojiBody and C_ShadowEquals

C_EngulfingBullishNumberOfCandles = 2
C_EngulfingBearishNumberOfCandles = 2

//isBullishEngulfing = close >= open[1] and open <= close[1] and (close > open[1] or open < close[1]) and C_WhiteBody and C_LongBody and C_BlackBody[1] and C_SmallBody[1] //and C_DownTrend
//isBearishEngulfing = close <= open[1] and open >= close[1] and (close < open[1] or open > close[1]) and C_BlackBody and C_LongBody and C_WhiteBody[1] and C_SmallBody[1] //and C_UpTrend

isBullishEngulfing = (open <= close[1]) and (open < open[1]) and (close > open[1]) and C_WhiteBody and C_LongBody and C_BlackBody[1] and C_SmallBody[1] //and C_DownTrend
isBearishEngulfing = (open >= close[1]) and (open > open[1]) and (close < open[1]) and C_BlackBody and C_LongBody and C_WhiteBody[1] and C_SmallBody[1] //and C_UpTrend

// Signals
HaGreen = haclose > haopen and haclose[1] <= haopen[1]
HaRed = haclose <= haopen and haclose[1] > haopen[1]

turnGreen = not isLong and isBullishEngulfing //and HaGreen
turnRed = isLong and isBearishEngulfing //and HaRed

isLong := turnGreen ? true : turnRed ? false : isLong

plotshape(turnGreen,  title = "Buy",  text = "Buy",  style = shape.labelup,   location = location.belowbar, color= color.green, textcolor = color.white, size = size.tiny)
plotshape(turnRed, title = "Sell", text = "Sell", style = shape.labeldown, location = location.abovebar, color= color.red,   textcolor = color.white, size = size.tiny)

// Last entry, SL, and TP values
last_entry = strategy.opentrades.entry_price(strategy.opentrades - 1)
sl_level = last_entry * 0.8
tp_level = last_entry * 1.5

// Buy signal
if turnGreen
    strategy.entry("Long", strategy.long, alert_message = "successfully opened a long position.")
    //strategy.exit("Stoploss/TP", "Long", stop = sl_level, limit = tp_level, alert_message = "successfully exited the market.")
    //strategy.close("Short", alert_message = "successfully closed a short position.")

// Sell signal
if turnRed
    //strategy.entry("Short", strategy.short, alert_message = "successfully opened a short position.")
    strategy.close("Long", alert_message = "successfully closed long a position.")
